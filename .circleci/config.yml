# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: alpine

    environment:
      HOST: ssh-840600-pftp2014@jetzt-die-welt-retten.de
      PROJ_DIR: /kunden/188089_20457/pftp2014/source
      ENV_VARS: ./env_vars.sh

    working_directory: ~/ttc-app

    steps:
      - run: echo "$CIRCLE_BRANCH"
      - run:
          name: Setting Environment Variables
          command: |
            > $ENV_VARS
            if [[ "${CIRCLE_BRANCH}" == "master" ]]
            then
              echo 'export WD_REACT="$PROJ_DIR/ttc-app_prod"' >>  $ENV_VARS
              echo 'export WD_SYMFONY="$PROJ_DIR/ttc2018_prod"' >>  $ENV_VARS
            elif [[ "${CIRCLE_BRANCH}" == "staging" ]]
            then
              echo 'export WD_REACT="$PROJ_DIR/ttc-app_staging"' >>  $ENV_VARS
              echo 'export WD_SYMFONY="$PROJ_DIR/ttc2018_staging"' >>  $ENV_VARS
            elif [[ "${CIRCLE_BRANCH}" == "devel" ]]
            then
              echo 'export WD_REACT="$PROJ_DIR/ttc-app_devel"' >>  $ENV_VARS
              echo 'export WD_SYMFONY="$PROJ_DIR/ttc2018_devel"' >>  $ENV_VARS
            elif [[ "${CIRCLE_BRANCH}" == "test" ]]
            then
              echo 'export WD_REACT="$PROJ_DIR/ttc-app_test"' >>  $ENV_VARS
              echo 'export WD_SYMFONY="$PROJ_DIR/ttc2018_test"' >>  $ENV_VARS
            fi
            cat $ENV_VARS

      # add SSH support
      - run:
          name: Install packages
          command: |
            apk update && apk add openssh
      # ID_RSA has been set up in project settings as base64 encoded content of 'id_rsa' file
      # https://circleci.com/gh/Plant-for-the-Planet-org/treecounter-platform/edit#env-vars
      - run:
          name: Setup SSH to Domain Factory
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan jetzt-die-welt-retten.de 2>/dev/null >> ~/.ssh/known_hosts
            (umask 077; touch ~/.ssh/id_rsa; chmod 0600 ~/.ssh/id_rsa)
            echo $ID_RSA | base64 -d > ~/.ssh/id_rsa
      - run:
          name: Build Application
          command: |
            source $ENV_VARS
            echo $WD_REACT
            echo $WD_SYMFONY

            ssh $HOST "cd $WD_REACT; git fetch origin $CIRCLE_BRANCH"
            ssh $HOST "cd $WD_REACT; git merge FETCH_HEAD"
            ssh $HOST "cd $WD_REACT; /usr/bin/npm install"
            if [[ "${CIRCLE_BRANCH}" == "master" ]]
            then
              ssh $HOST "cd $WD_REACT; /usr/bin/npm run build:prod_server"
            else
              ssh $HOST "cd $WD_REACT; /usr/bin/npm run build:server"
            fi
            ssh $HOST "cd $WD_REACT; sed -i 's%com/4.8%com/4.7%' web/server/bundle.js"

      - run:
          name: Integrate React Build into Symfony
          command: |
            source $ENV_VARS
            ssh $HOST "cd $WD_SYMFONY; sh .circleci/integrate-app.sh $CIRCLE_BRANCH"

  build_gitflow:
    docker:
      - image: circleci/node:10.11-jessie
    working_directory: ~/ttc-app
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: Install react-native CLI
          command: 'sudo npm install -g react-native-cli'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm
          command: npm install
      - run:
          name: Setup local configuration
          command: cp app/config/index.js.dist app/config/index.js
      - run:
          name: Build web client
          command: npm run build:server
      - run:
          name: Build Android app
          command: |
            react-native bundle \
                --platform android \
                --dev false \
                --entry-file index.js \
                --bundle-output android-release.bundle \
                --sourcemap-output android-release.bundle.map
      - run:
          name: Build iOS app
          command: |
            react-native bundle \
                --platform ios \
                --dev false \
                --entry-file index.js \
                --bundle-output ios-release.bundle \
                --sourcemap-output ios-release.bundle.map
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules

workflows:
  version: 2
  tagged-build:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - test
                - staging
                - devel
      - build_gitflow:
          filters:
            branches:
              only:
                - develop
                - /^feature\/.*/
                - /^hotfix\/.*/
                - /^release\/.*/
